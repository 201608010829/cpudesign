Date：04/07/2019
阅读并理解精简指令集RISC并作相关笔记以便日后编程实现。


Date: 08/07/2019

借鉴上一届同学的代码，了解其大概的实现思路，并将其思路与RISC-V指令集的定义进行对比，大概知道了如何设计CPU的指令。

Date: 10/07/2019

尝试将含有部分指令的demo代码编写成工程测试和运行

为了实现加减运算，需要将 std_logic_vector 转换成 integer 类型，而运算后的结果又要将整型转换成std_logic_vector。
使用了库std_logic_unsigned 与 std_logic_signed ，其中的函数CONV_STD_LOGIC_VECTOR 与函数 CONV_INTEGER 可以实现。

由于移位操作的操作符sll等需要库std_logic_arith ，但该库与之前的std_logic_signed 存在冲突，不能使用unsigned与signed函数，故需要另辟蹊径。
方案一：保留之前的CONV等函数，自己写出移位的逻辑
方案二：想办法不使用CONV函数，通过较为复杂的类型转换得到
通过查阅资料得知NUMERIC_STD 才是比较正统的ieee库文件，std_logic_unsigned , std_logic_signed , std_logic_arith 都是Synopsis公司实现的，
且如前面所说，使用这些库就无法方便的使用unsigned等类型转换函数，故决定使用方案二

程序总体设计：每条指令实现之前将寄存器组赋初值，目前使用到的寄存器位regs(0),regs(1),regs(2)，其值分别位0x00000001,0x00000003,0x00000100
指令1：ADD rs1 rs2 rd 将rs1的值加上rs2的值存入寄存器rd中
