李叙庆:
7月1~2日：
    入群第一天，老师发来链接，让我们自学，我无从下手。然后通过官方手册和各博客了解rsic-v的指令集。
    下载了一个开源的工程进行查看（劝退）。之后找了本书来看看，《手把手教你设计CPU——RISC-V处理器篇》，作者：胡振波。
7月3~4日：
    看书看源码。
7月5日：
    尝试从指令memory模块开始做。
7月8日：
    还是看手册（Computer Organization and Design）有用，之前那本主要讲流水线设计。
7月9,10日：
初步设计完指令ROM，寄存器，pc计数。
7月11，12日：
    分析指令，尝试相关alu的设计。

8月26~27日
    先复习了一下之前的内容，然后参照手册以及老师代码开始设计alu的指令执行过程。
9月3~4日
    对之前完成的进行测试，修改，可合并一些模块，方便代码的编写。


刘梦函：
7月1日~7月2日
查阅相关资料，了解模拟器的功能和原理。
浏览相关网站和博客，对RISC-V基本指令集有了初步的了解：https://riscv.org/specifications

7月3日~7月5日
试运行2018年版本的模拟器的代码，体会模拟器设计的思想和总体框架。

7月6日-7月8日
开始编写代码

7月8日-7月10日
运行简单的模块，继续学习设计思路和简单编写语言。

7月11日-7月12日
理解各个指令的执行流程，知道了我们这次编写的指令集主要是针对整数进行，主要为RISC-V指令集的 “I”指令集和“A”指令集。
“Ｉ”开头的指令集定义为标准整数指令集（前缀RV32或者RV64取决于整数寄存器的宽度，分别表示３２位架构和64位架构）。“Ｉ”指令集和中包括的主要指令有：整数计算指令，整数加载，整数存储，控制流指令。
“Ａ”开头的扩展为包含原子指令，其中的指令有为实现处理器间同步的原子性读，修改和写入存储器指令。
重点理解无符号数和有符号数在操作上的异同，以及零扩展、符号扩展和逻辑左移、算术左移之间的异同。

8月27日-8月31日
尝试编写测试程序，主要目的是能够测试出各个类型的指令的执行情况，主要是跳转，写入，读出，逻辑和算术指令的测试，还要测试出零扩展和符号扩展的区别。

9月1日-9月4日
开始测试，分析记录PC、IR及各个寄存器的值，完成实验报告。
